spring:
  application:
    name: 'prsdb-webapp'

  thymeleaf:
    cache: false

  datasource:
    url: jdbc:postgresql://localhost:5433/prsdblocal
    username: postgres
    password: notarealpassword

    jpa:
      hibernate:
        ddl-auto: validate
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
      defer-datasource-initialization: true
      show-sql: true

  flyway:
    enabled: true
    locations: classpath:db/migrations
    validate-on-migrate: true

  sql:
    init:
      mode: always
      platform: local
      continue-on-error: true

  data:
    redis:
      host: localhost
      port: 6379
      password: notarealpassword
      ssl:
        enabled: false

one-login:
  jwt:
    # We provide a default for the keys if the env vars are missing: this allows us to keep the keys in uncommitted
    # files for local dev. In CI, however, we provide the data through env vars (from a secret store)
    public.key: ${ONE_LOGIN_PUBLIC_KEY:classpath:public_key.pem}
    private.key: ${ONE_LOGIN_PRIVATE_KEY:classpath:private_key.pem}


notify:
  api-key: ${EMAILNOTIFICATIONS_APIKEY}

epc:
  base-url: https://api.epb-staging.digital.communities.gov.uk
  certificate-base-url: https://find-energy-certificate-staging.digital.communities.gov.uk/energy-certificate

server:
  error:
    path: /error

local:
  emails:
    transientExceptionAddress: transient@example.com
    persistentExceptionAddress: persistent@example.com
  base-path-component: ${LOCAL_BASE_PATH_COMPONENT:}

base-url:
  landlord: http://localhost:8080/landlord
  local-authority: http://localhost:8080/local-authority
---

spring:
  config:
    activate:
      on-profile: local-no-auth

  security:
    oauth2:
      client:
        registration:
          one-login:
            client-id: l0AE7SbEHrEa8QeQCGdml9KQ4bk
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            scope: openid
            redirect-uri: http://localhost:8080/login/oauth2/code/one-login
          epc-register:
            client-id: cb34efcd-4e22-439f-a15e-fcb8abdf73a2
            client-secret: ${EPC_REGISTER_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope:
        provider:
          one-login:
            authorization-uri: http://localhost:8080/local/one-login/authorize
            token-uri: http://localhost:8080/local/one-login/token
            jwk-set-uri: http://localhost:8080/local/one-login/.well-known/jwks.json
            user-info-uri: http://localhost:8080/local/one-login/userinfo
            userNameAttribute: "sub"
          epc-register:
            token-uri: https://api.epb-staging.digital.communities.gov.uk/auth/oauth/token

one-login.did.uri: http://localhost:8080/local/one-login/.well-known/did.json

---

spring:
  config:
    activate:
      on-profile: local-no-auth-unverified

local:
  id-verification-user-info-file: src/main/kotlin/uk/gov/communities/prsdb/webapp/local/api/mockOneLoginResponses/unverifiedUserInfo.json

---

spring:
  config:
    activate:
      on-profile: local-auth

  security:
    oauth2:
      client:
        registration:
          one-login:
            client-id: l0AE7SbEHrEa8QeQCGdml9KQ4bk
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            scope: openid
        provider:
          one-login:
            issuer-uri: https://oidc.integration.account.gov.uk/

---

spring:
  config:
    activate:
      on-profile: local-mock-os-places

os-places:
  base-url: http://localhost:8080/local/os-places
  api-key: fake-key
