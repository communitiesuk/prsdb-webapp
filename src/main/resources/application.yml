spring:
  application:
    name: 'prsdb-webapp'

  datasource:
    url: ${RDS_URL}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}

    hikari:
      connection-init-sql: SET pg_trgm.word_similarity_threshold = 0.2

    jpa:
      hibernate:
        ddl-auto: validate
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
      defer-datasource-initialization: true

  flyway:
    enabled: false

  sql:
    init:
      mode: always
      platform: ${ENVIRONMENT_NAME}
      continue-on-error: true

  data:
    redis:
      host: ${ELASTICACHE_URL}
      port: ${ELASTICACHE_PORT}
      password: ${ELASTICACHE_PASSWORD}
      ssl:
        enabled: true

  mvc.format.date: "d MMMM yyyy"

  thymeleaf:
    render-hidden-markers-before-checkboxes: true
    servlet:
      produce-partial-output-while-processing: false

  servlet:
    multipart:
      enabled: false

one-login:
  jwt:
    public.key: ${ONE_LOGIN_PUBLIC_KEY}
    private.key: ${ONE_LOGIN_PRIVATE_KEY}
  did.uri: https://identity.integration.account.gov.uk/.well-known/did.json

notify:
  api-key: ${EMAILNOTIFICATIONS_APIKEY}
  support-email: ${EMAILNOTIFICATIONS_SUPPORTEMAIL:Team-PRSDB+virus-notification@softwire.com}
  use-production-notify: ${EMAILNOTIFICATIONS_USE_PRODUCTION_NOTIFY}

os-places:
  api-key: ${OS_PLACES_API_KEY}
  base-url: https://api.os.uk/search/places/v1

epc:
  base-url: ${EPC_REGISTER_BASE_URL}
  certificate-base-url: ${EPC_CERTIFICATE_BASE_URL}

server:
  error:
    path: /error
  tomcat:
    redirect-context-root: false
  forward-headers-strategy: native

aws:
  s3:
    signatureDuration: ${AWS_S3_SIGNATURE_DURATION:1h}
    quarantineBucket: ${AWS_QUARANTINE_BUCKET}
    safeBucket: ${S3_SAFE_BUCKET_KEY}

base-url:
  landlord: ${LANDLORD_BASE_URL}
  local-authority: ${LOCAL_AUTHORITY_BASE_URL}

plausible:
  domain-id: ${PLAUSIBLE_ANALYTICS_DOMAIN_ID}

google-analytics:
  measurement-id: ${GOOGLE_ANALYTICS_MEASUREMENT_ID}
  cookie-domain: ${GOOGLE_ANALYTICS_COOKIE_DOMAIN}

---

spring:
  config:
    activate:
      on-profile: default

  security:
    oauth2:
      client:
        registration:
          one-login:
            client-id: ${ONE_LOGIN_CLIENT_ID}
            client-authentication-method: private_key_jwt
            authorization-grant-type: authorization_code
            scope: openid
          epc-register:
            client-id: ${EPC_REGISTER_CLIENT_ID}
            client-secret: ${EPC_REGISTER_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope:
        provider:
          one-login:
            issuer-uri: ${ONE_LOGIN_ISSUER_URL}
          epc-register:
            token-uri: ${EPC_REGISTER_TOKEN_URI}

---

spring:
  config:
    activate:
      on-profile: web-server-deactivated

  main:
    web-application-type: none